name: Build, Scan and Push Docker Image

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [published]

jobs:
  build-scan-push:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4. Build Docker image
      - name: Build Docker image
        run: docker build -t myapp:latest .

      # 5. Install Trivy
      - name: Install Trivy
        run: |
          sudo apt-get update && sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.55.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.55.0_Linux-64bit.deb

      # 6. Scan Docker image (fail if MEDIUM+)
      - name: Scan Docker image
        run: |
          echo "üîç Running Trivy scan for MEDIUM and above..."
          trivy image \
            --severity MEDIUM,HIGH,CRITICAL \
            --exit-code 1 \
            --ignore-unfixed \
            myapp:latest

      # 7. Tag and Push Docker image (only if scan passed)
      - name: Push Docker image
        if: success()
        run: |
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/myapp

          # Always push latest
          docker tag myapp:latest $IMAGE_NAME:latest
          docker push $IMAGE_NAME:latest

          # If this workflow runs on a git tag (release), also push versioned tag
          if [ "${GITHUB_REF_TYPE}" = "tag" ]; then
            VERSION_TAG=${GITHUB_REF_NAME}
            echo "üì¶ Pushing versioned image: $IMAGE_NAME:$VERSION_TAG"
            docker tag myapp:latest $IMAGE_NAME:$VERSION_TAG
            docker push $IMAGE_NAME:$VERSION_TAG
          fi
